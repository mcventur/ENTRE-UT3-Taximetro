#BlueJ class context
comment0.target=Taximetro
comment0.text=\r\n\ \ La\ clase\ modela\ un\ taximetro\ simplificado\ que\ recoge\ estad\u00EDsticas\r\n\ \ de\ las\ carreras\ realizadas,\ tiempo\ total,\ distancia...\r\n\ \r\n\ @aitor\r\n
comment1.params=queMatricula
comment1.target=Taximetro(java.lang.String)
comment1.text=\r\n\ Constructor\ \r\n\ Inicializa\ el\ taximetro\ con\ la\ matricula\ del\ veh\u00EDculo.\ \r\n\ El\ resto\ de\ atributos\ se\ ponen\ a\ 0\r\n
comment10.params=
comment10.target=void\ reset()
comment10.text=\r\n\ Restablecer\ los\ valores\ iniciales\ del\ taximetro\r\n\ Todos\ los\ atributos\ se\ ponen\ a\ cero\r\n\ La\ matr\u00EDcula\ no\ var\u00EDa\r\n\ \ \r\n
comment2.params=
comment2.target=java.lang.String\ getMatricula()
comment2.text=\r\n\ Accesor\ para\ la\ matricula\r\n
comment3.params=coefAerodinamico\ pesoKg
comment3.target=void\ configurar(double,\ int)
comment3.text=\r\n\ Permite\ configurar\ los\ par\u00E1metros\ de\ consumo\ del\ taximetro\r\n\ (Leer\ enunciado)\r\n
comment4.params=kilometros\ dia\ horaInicio\ horaFin
comment4.target=void\ registrarCarrera(int,\ int,\ int,\ int)
comment4.text=\r\n\ \ Recibe\ cuatro\ par\u00E1metros\ que\ supondremos\ correctos\:\r\n\ \ \ \ kilometros\ -\ el\ n\u00BA\ de\ kilometros\ de\ la\ carrera\r\n\ \ \ \ dia\ -\ n\u00BA\ de\ d\u00EDa\ de\ la\ semana\ en\ que\ se\ ha\ hecho\ la\ caminata\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ (1\ -\ Lunes,\ 2\ -\ Martes\ -\ ....\ -\ 6\ -\ S\u00E1bado,\ 7\ -\ Domingo)\r\n\ \ \ \ horaInicio\ \u2013\ hora\ de\ inicio\ de\ la\ caminata\r\n\ \ \ \ horaFin\ \u2013\ hora\ de\ fin\ de\ la\ caminata\r\n\ \ \ \ \r\n\ \ \ \ A\ partir\ de\ estos\ par\u00E1metros\ el\ m\u00E9todo\ debe\ realizar\ ciertos\ c\u00E1lculos\r\n\ \ \ \ y\ \ actualizar\u00E1\ el\ taximetro\ adecuadamente\ \ \r\n\ \ \ \r\n\ \ \ (leer\ enunciado\ del\ ejercicio)\r\n
comment5.params=posibleMaximo\ indice
comment5.target=void\ testMax(double,\ int)
comment5.text=\r\n\ An\ example\ of\ a\ method\ -\ replace\ this\ comment\ with\ your\ own\r\n\r\n\ @param\ \ y\ \ \ a\ sample\ parameter\ for\ a\ method\r\n\ @return\ \ \ \ \ the\ sum\ of\ x\ and\ y\r\n
comment6.params=posibleMinimo\ indice
comment6.target=void\ testMin(double,\ int)
comment7.params=
comment7.target=void\ printConfiguracion()
comment7.text=\r\n\ Muestra\ en\ pantalla\ la\ configuraci\u00F3n\ del\ tax\u00EDmetro\r\n\ (matricula,\ coeficiente\ aerodin\u00E1mico,\ peso\ y\ consumo\ a\ los\ 100)\r\n\ \r\n\ (ver\ enunciado)\r\n\ \ \r\n
comment8.params=
comment8.target=void\ printEstad\u00EDsticas()
comment8.text=\r\n\ Muestra\ en\ pantalla\ informaci\u00F3n\ acerca\ de\ la\ distancia\ recorrida,\r\n\ carreras,\ tiempo\ total,\ ....\r\n\ \r\n\ (leer\ enunciado)\r\n\ \ \r\n
comment9.params=
comment9.target=java.lang.String\ diaMayorNumeroCarreras()
comment9.text=\r\n\ \ Calcula\ y\ devuelve\ un\ String\ que\ representa\ el\ nombre\ del\ d\u00EDa\r\n\ \ en\ el\ que\ se\ han\ realizado\ m\u00E1s\ carreras\ -\ "S\u00C1BADO"\ \ \ "DOMINGO"\ o\ \ "LABORABLES"\r\n
numComments=11
